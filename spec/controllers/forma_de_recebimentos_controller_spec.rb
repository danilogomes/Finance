require 'spec_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by the Rails when you ran the scaffold generator.

describe FormaDeRecebimentosController do

  def mock_forma_de_recebimento(stubs={})
    @mock_forma_de_recebimento ||= mock_model(FormaDeRecebimento, stubs).as_null_object
  end

  describe "GET index" do
    it "assigns all forma_de_recebimentos as @forma_de_recebimentos" do
      FormaDeRecebimento.stub(:all) { [mock_forma_de_recebimento] }
      get :index
      assigns(:forma_de_recebimentos).should eq([mock_forma_de_recebimento])
    end
  end

  describe "GET show" do
    it "assigns the requested forma_de_recebimento as @forma_de_recebimento" do
      FormaDeRecebimento.stub(:find).with("37") { mock_forma_de_recebimento }
      get :show, :id => "37"
      assigns(:forma_de_recebimento).should be(mock_forma_de_recebimento)
    end
  end

  describe "GET new" do
    it "assigns a new forma_de_recebimento as @forma_de_recebimento" do
      FormaDeRecebimento.stub(:new) { mock_forma_de_recebimento }
      get :new
      assigns(:forma_de_recebimento).should be(mock_forma_de_recebimento)
    end
  end

  describe "GET edit" do
    it "assigns the requested forma_de_recebimento as @forma_de_recebimento" do
      FormaDeRecebimento.stub(:find).with("37") { mock_forma_de_recebimento }
      get :edit, :id => "37"
      assigns(:forma_de_recebimento).should be(mock_forma_de_recebimento)
    end
  end

  describe "POST create" do
    describe "with valid params" do
      it "assigns a newly created forma_de_recebimento as @forma_de_recebimento" do
        FormaDeRecebimento.stub(:new).with({'these' => 'params'}) { mock_forma_de_recebimento(:save => true) }
        post :create, :forma_de_recebimento => {'these' => 'params'}
        assigns(:forma_de_recebimento).should be(mock_forma_de_recebimento)
      end

      it "redirects to the created forma_de_recebimento" do
        FormaDeRecebimento.stub(:new) { mock_forma_de_recebimento(:save => true) }
        post :create, :forma_de_recebimento => {}
        response.should redirect_to(forma_de_recebimento_url(mock_forma_de_recebimento))
      end
    end

    describe "with invalid params" do
      it "assigns a newly created but unsaved forma_de_recebimento as @forma_de_recebimento" do
        FormaDeRecebimento.stub(:new).with({'these' => 'params'}) { mock_forma_de_recebimento(:save => false) }
        post :create, :forma_de_recebimento => {'these' => 'params'}
        assigns(:forma_de_recebimento).should be(mock_forma_de_recebimento)
      end

      it "re-renders the 'new' template" do
        FormaDeRecebimento.stub(:new) { mock_forma_de_recebimento(:save => false) }
        post :create, :forma_de_recebimento => {}
        response.should render_template("new")
      end
    end
  end

  describe "PUT update" do
    describe "with valid params" do
      it "updates the requested forma_de_recebimento" do
        FormaDeRecebimento.stub(:find).with("37") { mock_forma_de_recebimento }
        mock_forma_de_recebimento.should_receive(:update_attributes).with({'these' => 'params'})
        put :update, :id => "37", :forma_de_recebimento => {'these' => 'params'}
      end

      it "assigns the requested forma_de_recebimento as @forma_de_recebimento" do
        FormaDeRecebimento.stub(:find) { mock_forma_de_recebimento(:update_attributes => true) }
        put :update, :id => "1"
        assigns(:forma_de_recebimento).should be(mock_forma_de_recebimento)
      end

      it "redirects to the forma_de_recebimento" do
        FormaDeRecebimento.stub(:find) { mock_forma_de_recebimento(:update_attributes => true) }
        put :update, :id => "1"
        response.should redirect_to(forma_de_recebimento_url(mock_forma_de_recebimento))
      end
    end

    describe "with invalid params" do
      it "assigns the forma_de_recebimento as @forma_de_recebimento" do
        FormaDeRecebimento.stub(:find) { mock_forma_de_recebimento(:update_attributes => false) }
        put :update, :id => "1"
        assigns(:forma_de_recebimento).should be(mock_forma_de_recebimento)
      end

      it "re-renders the 'edit' template" do
        FormaDeRecebimento.stub(:find) { mock_forma_de_recebimento(:update_attributes => false) }
        put :update, :id => "1"
        response.should render_template("edit")
      end
    end
  end

  describe "DELETE destroy" do
    it "destroys the requested forma_de_recebimento" do
      FormaDeRecebimento.stub(:find).with("37") { mock_forma_de_recebimento }
      mock_forma_de_recebimento.should_receive(:destroy)
      delete :destroy, :id => "37"
    end

    it "redirects to the forma_de_recebimentos list" do
      FormaDeRecebimento.stub(:find) { mock_forma_de_recebimento }
      delete :destroy, :id => "1"
      response.should redirect_to(forma_de_recebimentos_url)
    end
  end

end
